import React, { useState } from "react";

const labels = {
    ua: {
        title: "–ó—É—Å—Ç—Ä—ñ–Ω—å—Ç–µ —Å–≤–æ—é –∫—ñ–Ω–æ–ø–∞—Ä—É!",
        info_button: "–ë—ñ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π..",
        more_button: "–ë–∞—á–∏–ª–∏ - –ø–æ–∫–∞–∑–∞—Ç–∏ —ñ–Ω—à–µ",
        restart_button: "–ü–æ—á–∞—Ç–∏ —Å–ø–æ—á–∞—Ç–∫—É",
        loading: "–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...",
        name: "–ù–∞–∑–≤–∞: ",
        year: "–†—ñ–∫: ",
        rating: "–†–µ–π—Ç–∏–Ω–≥: ",
        overview: "–û–ø–∏—Å:",
        no_results: "–ù–µ–º–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ üò¢",
        no_results_desc: "–°–ø—Ä–æ–±—É–π—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ —Å–≤–æ—ó –≤–ø–æ–¥–æ–±–∞–Ω–Ω—è",
        weakened_filters_warning: "‚ö†Ô∏è –ú–∏ —Ä–æ–∑—à–∏—Ä–∏–ª–∏ –ø–æ—à—É–∫. –§—ñ–ª—å—Ç—Ä–∏ –∂–∞–Ω—Ä—ñ–≤ –¥–ª—è {characterName} –±—É–ª–∏ –ø—Ä–æ—ñ–≥–Ω–æ—Ä–æ–≤–∞–Ω—ñ, —â–æ–± –∑–Ω–∞–π—Ç–∏ —Ö–æ—á —è–∫–∏–π—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç.",
        type: "–¢–∏–ø: ",
        episodes: "–ï–ø—ñ–∑–æ–¥–∏: ",
    },
    ru: {
        title: "–í—Å—Ç—Ä–µ—Ç—å—Ç–µ —Å–≤–æ—é –∫–∏–Ω–æ-–ø–∞—Ä—É!",
        info_button: "–ë–æ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π..",
        more_button: "–í–∏–¥–µ–ª–∏ - –ø–æ–∫–∞–∑–∞—Ç—å –¥—Ä—É–≥–æ–µ",
        restart_button: "–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞",
        loading: "–ó–∞–≥—Ä—É–∑–∫–∞...",
        name: "–ù–∞–∑–≤–∞–Ω–∏–µ: ",
        year: "–ì–æ–¥: ",
        rating: "–†–µ–π—Ç–∏–Ω–≥: ",
        overview: "–û–ø–∏—Å–∞–Ω–∏–µ:",
        no_results: "–ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ üò¢",
        no_results_desc: "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è",
        weakened_filters_warning: "‚ö†Ô∏è –ú—ã —Ä–∞—Å—à–∏—Ä–∏–ª–∏ –ø–æ–∏—Å–∫. –§–∏–ª—å—Ç—Ä—ã –∂–∞–Ω—Ä–æ–≤ –¥–ª—è {characterName} –±—ã–ª–∏ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω—ã, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Ö–æ—Ç—å –∫–∞–∫–æ–π-—Ç–æ –∫–æ–Ω—Ç–µ–Ω—Ç.",
        type: "–¢–∏–ø: ",
        episodes: "–≠–ø–∏–∑–æ–¥—ã: ",
    },
    en: {
        title: "Meet your movie match!",
        info_button: "More details..",
        more_button: "Seen it - show another",
        restart_button: "Start over",
        loading: "Loading...",
        name: "Name: ",
        year: "Year: ",
        rating: "Rating: ",
        overview: "Overview:",
        no_results: "No results found üò¢",
        no_results_desc: "Try changing your preferences",
        weakened_filters_warning: "‚ö†Ô∏è We broadened the search. Genre filters for {characterName} were ignored to find any content.",
        type: "Type: ",
        episodes: "Episodes: ",
    }
};

export default function Results({
    movies = [],
    onRestart,
    lang = "ua",
    loading = false,
    didWeakenFilters = false,
    characterName = null,
    contentType = null, // –î–æ–±–∞–≤–ª—è–µ–º contentType –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
}) {
    const [idx, setIdx] = useState(0);
    const text = labels[lang];

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    if (loading) {
        return (
            <div className="result-screen">
                <div className="loading-animation">
                    <div className="film-logo" style={{ fontSize: "100px" }}>üé¨</div>
                    <h2>{text.loading}</h2>
                </div>
            </div>
        );
    }

    // –ï—Å–ª–∏ –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    if (!movies || movies.length === 0) {
        return (
            <div className="result-screen">
                <h2 className="result-title">{text.no_results}</h2>
                <p style={{ fontSize: "14px", marginTop: "20px" }}>
                    {text.no_results_desc}
                </p>
                <div style={{ marginTop: "30px" }}>
                    <button onClick={onRestart} className="btn btn-active">
                        {text.restart_button}
                    </button>
                </div>
            </div>
        );
    }

    const current = movies[idx];
    const next = () => setIdx((i) => (i + 1) % movies.length);

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
    const warningMessage = didWeakenFilters
        ? text.weakened_filters_warning.replace("{characterName}", characterName || "–ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
        : null;

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –¥–µ—Ç–∞–ª–∏ (IMDB –¥–ª—è —Ñ–∏–ª—å–º–æ–≤/—Å–µ—Ä–∏–∞–ª–æ–≤, MAL –¥–ª—è –∞–Ω–∏–º–µ)
    const getDetailsLink = (movie) => {
        // –ï—Å–ª–∏ —ç—Ç–æ –∞–Ω–∏–º–µ –∏ –µ—Å—Ç—å –ø—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ MAL
        if (contentType === "anime" && movie.malUrl) {
            return movie.malUrl;
        }
        
        // –ï—Å–ª–∏ —ç—Ç–æ –∞–Ω–∏–º–µ –Ω–æ –Ω–µ—Ç malUrl, –∏—â–µ–º –Ω–∞ MAL
        if (contentType === "anime") {
            const searchQuery = encodeURIComponent(movie.title);
            return `https://myanimelist.net/anime.php?q=${searchQuery}`;
        }
        
        // –î–ª—è —Ñ–∏–ª—å–º–æ–≤ –∏ —Å–µ—Ä–∏–∞–ª–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º IMDB
        const searchQuery = encodeURIComponent(`${movie.title} ${movie.year}`);
        return `https://www.imdb.com/find?q=${searchQuery}`;
    };

    return (
        <div className="result-screen">
            <h2 className="result-title">{text.title}</h2>
            
            {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ–± –æ—Å–ª–∞–±–ª–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ */}
            {warningMessage && (
                <div className="result-warning-message">
                    {warningMessage}
                </div>
            )}
            
            <div className="result-content">
                <h3 className="result-name">
                    {current.title}
                    {current.year && ` (${current.year})`}
                </h3>

                {current.poster && (
                    <img
                        src={current.poster}
                        alt={current.title}
                        className="result-poster"
                        style={{
                            borderRadius: "12px",
                            maxWidth: "400px",
                            width: "100%",
                            marginBottom: "20px",
                            boxShadow: "0 8px 20px rgba(0,0,0,0.3)"
                        }}
                    />
                )}

                {!current.poster && (
                    <div className="poster-placeholder" style={{
                        width: "400px",
                        height: "600px",
                        marginBottom: "20px"
                    }}>
                        üé¨
                    </div>
                )}

                <div className="result-info" style={{
                    textAlign: "center",
                    color: "#111",
                    maxWidth: "400px",
                    margin: "0 auto"
                }}>
                    {current.rating && (
                        <p style={{ fontSize: "14px", marginBottom: "10px" }}>
                            <strong>{text.rating}</strong> ‚≠ê {current.rating.toFixed(1)}/10
                        </p>
                    )}

                    {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø –¥–ª—è –∞–Ω–∏–º–µ (TV, Movie, OVA –∏ —Ç.–¥.) */}
                    {contentType === "anime" && current.type && (
                        <p style={{ fontSize: "14px", marginBottom: "10px" }}>
                            <strong>{text.type}</strong> {current.type}
                        </p>
                    )}

                    {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ø–∏–∑–æ–¥–æ–≤ –¥–ª—è –∞–Ω–∏–º–µ */}
                    {contentType === "anime" && current.episodes && (
                        <p style={{ fontSize: "14px", marginBottom: "10px" }}>
                            <strong>{text.episodes}</strong> {current.episodes}
                        </p>
                    )}
                </div>

                <div className="result-actions" style={{ marginTop: "30px" }}>
                    {/* <a
                        href={getDetailsLink(current)}
                        target="_blank"
                        rel="noreferrer"
                        className="btn btn-active"
                        style={{ marginRight: "10px" }}
                    >
                        {text.info_button}
                    </a> */}

                    <button
                        onClick={next}
                        className="btn btn-active"
                        style={{ marginRight: "10px" }}
                    >
                        {text.more_button}
                    </button>

                    <button
                        onClick={onRestart}
                        className="btn btn-reset"
                    >
                        {text.restart_button}
                    </button>
                </div>

                <div className="result-index" >
                    {idx + 1} / {movies.length}
                </div>
            </div>
        </div>
    );
}